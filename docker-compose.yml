version: "3.3"
services:
  geos:
    image: kartoza/geoserver:${GS_VERSION}
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
    restart: on-failure
    environment:
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - INITIAL_MEMORY=${INITIAL_MEMORY}
      - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

  db:
    image: kartoza/postgis:${POSTGIS_VERSION_TAG}
    volumes:
      - geo-db-data:/var/lib/postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - RUN_AS_ROOT=false
    restart: on-failure
    healthcheck:
      test: "exit 0"

  nginx:
     image: nginx
     volumes:
       - ./sites-enabled:/etc/nginx/conf.d:ro
     logging:
       driver: json-file
       options:
         max-size: 200m
         max-file: '10'
     depends_on:
       - geos
     ports:
       - "8008:8008"
  node:
    build:
      context: ./old-maps
      dockerfile: ./maps.Dockerfile
    image: landscapedatacommons/jornada-asombromaps:1.0.0
    ports:
      - 3001:3000
volumes:
  # geoserver volumes
  geoserver-data:
  settings:
  # postgres volumes
  # dbbackups:
  # postgis-data:
  geo-db-data:

